<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
  - the Java Language Specification at http://java.sun.com/docs/books/jls/second_edition/html/index.html
  - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
  - the Javadoc guidelines at http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
  - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html
  - some best practices Checkstyle is very configurable.
  Be sure to read the documentation at http://checkstyle.sf.net (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  Finally, it is worth reading the documentation.
-->
<module name="Checker">
  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value="[/\\]src[/\\]generated[/\\]*"/>
  </module>

  <!--
    If you set the basedir property below, then all reported file names will be relative to the specified directory.
    See http://checkstyle.sourceforge.net/5.x/config.html#Checker <property name="basedir" value="${basedir}"/>
  -->

  <property name="charset" value="UTF-8"/>

  <!-- Checks whether files end with a new line. -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <!-- <module name="NewlineAtEndOfFile"/> -->

  <!-- Checks that property files contain the same keys. -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation">
    <property name="severity" value="warning"/>
  </module>

  <module name="FileLength">
    <property name="max" value="1500"/>
  </module>

  <!-- Following interprets the header file as regular expressions. -->
  <!-- <module name="RegexpHeader"/> -->

  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <!-- Forbid commons-lang library (commons-lang3 must be used) -->
  <module name="RegexpSingleline">
    <property name="format" value="^import (static )?org\.apache\.commons\.lang\..*;$"/>
    <property name="message"
              value="Outdated library is used: use 'commons-lang3' instead of 'commons-lang'."/>
  </module>

  <module name="TreeWalker">
    <property name="tabWidth" value="4"/>
    <!-- <property name="cacheFile" value="${checkstyle.cache.file}" /> -->

    <!-- Checks for Javadoc comments. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocMethod">
      <property name="severity" value="info"/>
    </module>

    <module name="JavadocType">
      <property name="severity" value="info"/>
    </module>

    <module name="JavadocStyle">
      <property name="severity" value="info"/>
    </module>

    <module name="JavadocVariable">
      <property name="severity" value="ignore"/>
    </module>

    <!-- Checks for Naming Conventions. -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

    <!-- Checks for Headers -->
    <!-- See http://checkstyle.sf.net/config_header.html -->
    <!-- <module name="Header"> -->
    <!-- The follow property value demonstrates the ability -->
    <!-- to have access to ANT properties. In this case it uses -->
    <!-- the ${basedir} property to allow Checkstyle to be run -->
    <!-- from any directory within a project. See property -->
    <!-- expansion, -->
    <!-- http://checkstyle.sf.net/config.html#properties -->
    <!-- <property -->
    <!-- name="headerFile" -->
    <!-- value="${basedir}/java.header"/> -->
    <!-- </module> -->

    <!-- Checks for imports -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/>
    <!-- defaults to sun.* packages -->
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>


    <module name="MethodLength">
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for whitespace -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <!-- <module name="EmptyForIteratorPad" /> -->
    <!-- <module name="MethodParamPad" /> -->
    <module name="NoWhitespaceAfter">
      <property name="severity" value="warning"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="severity" value="warning"/>
    </module>
    <module name="OperatorWrap">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParenPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="TypecastParenPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="WhitespaceAfter">
      <property name="severity" value="warning"/>
    </module>
    <module name="WhitespaceAround">
      <property name="severity" value="warning"/>
    </module>

    <!-- Modifier Checks -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder">
      <property name="severity" value="info"/>
    </module>
    <module name="RedundantModifier"/>

    <!-- Checks for blocks. You know, those {}'s -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="AvoidNestedBlocks">
      <property name="severity" value="warning"/>
    </module>
    <module name="EmptyBlock"/>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="RightCurly"/>

    <!-- Checks for common coding problems -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <!-- <module name="AvoidInlineConditionals"/> -->
    <!-- See http://stackoverflow.com/questions/12795935/checkstyle-eclipse-plugin-doesnt-work -->
    <!-- module name="DoubleCheckedLocking">
      <property name="severity" value="warning" />
    </module -->
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="severity" value="warning"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="severity" value="warning"/>
    </module>
    <module name="InnerAssignment"/>
    <module name="MissingSwitchDefault"/>
    <module name="SimplifyBooleanExpression">
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanReturn">
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for class design -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="DesignForExtension">
      <property name="severity" value="ignore"/>
    </module>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier">
      <property name="severity" value="warning"/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <property name="checks" value="VisibilityModifier"/>
      <property name="query" value="//*[MODIFIERS//*[@text = 'Value']]/descendant-or-self::node()"/>
    </module>

    <!-- Miscellaneous other checks. -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle">
      <property name="severity" value="warning"/>
    </module>
    <module name="FinalParameters">
      <property name="severity" value="warning"/>
    </module>
    <module name="TodoComment">
      <property name="severity" value="info"/>
    </module>
    <module name="UpperEll">
      <property name="severity" value="info"/>
    </module>
    <module name="SuppressWarningsHolder" />
  </module>
  <module name="SuppressWarningsFilter" />
  <!-- Checks for Size Violations. -->
  <!-- See http://checkstyle.sf.net/config_sizes.html -->
  <module name="LineLength">
    <property name="max" value="120"/>
  </module>

</module>
